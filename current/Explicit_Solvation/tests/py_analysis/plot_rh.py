#!/usr/licensed/anaconda3/2020.7/bin/python

import numpy as np 
import re 
import matplotlib.pyplot as plt 
import pandas as pd
import pandas as pd 
import os 
import aux 


'''
This code will take in a trajectory file generated by my MonteCarlo engine and 
give you Radius of Gyration
'''

import argparse 
parser = argparse.ArgumentParser(description="Read a trajectory file and obtain a radius of gyration histogram.")
parser.add_argument('-U', metavar='UX', dest='U', action='store', type=str, help='enter identifier of energy surface.')
parser.add_argument('-dop', metavar='DOP', dest='dop', type=int, action='store', help='enter a degree of polymerization.')
parser.add_argument('-s', metavar='S', type=int, dest='s', action='store', help='start parsing after this index.', default=100)

args = parser.parse_args() 

if __name__ == "__main__":
    U            = args.U
    dop          = args.dop
        
    rh_mean = np.array([])
    rh_std  = np.array([])
    
    temperatures = aux.dir2float (os.listdir( str(U) + "/DOP_" + str(args.dop) ) ) 

    for T in temperatures:
        

        filename = U +"/DOP_"+str(dop)+"/"+str(T)+"/coords.txt"
        master_dict = aux.get_pdict (filename, dop+2, dop+2, dop+2) 
        rh_mean = np.hstack ( ( rh_mean, aux.get_Rh(master_dict, dop+2, dop+2, dop+2, args.s) ) ) 
    

fig = plt.figure() 
ax  = plt.axes() 
# print(rg_std)
ax.errorbar   ( temperatures, rh_mean, yerr= 0, linestyle='-.', marker='^' )
ax.set_xlabel ( "Temperature" ) 
ax.set_ylabel ( "Radius of gyration" ) 
ax.set_xticks ( np.arange(0, np.max(temperatures)+1, 1) ) 
plt.savefig   ( "rh_plot"+str(args.dop)+".png", dpi=1200 ) 
plt.show() 

